#include <iostream>
#include <stdio.h>
#include <stdlib.h>

#include <readline/readline.h>
#include <readline/history.h>

#include "parse.h"

using namespace std;


/* A static variable for holding the line. */
static char *line_read = (char *)NULL;

/* Read a string, and return a pointer to it.
   Returns NULL on EOF. */
char *rl_gets ()
{
  /* If the buffer has already been allocated,
     return the memory to the free pool. */
  if (line_read) {
      free (line_read);
      line_read = (char *)NULL;
    }

  /* Get a line from the user. */
  line_read = readline ("");

  /* If the line has any text in it,
     save it on the history. */
  if (line_read && *line_read)
    add_history (line_read);

  return (line_read);
}



int main () {
	Lexer lexer;

	cout << "Calculator v0.1" << endl;
	// disable tab filename completion
	rl_bind_key ('\t', rl_insert);

	while (1) {
		int ret;
		char *line = rl_gets ();

		if ((ret = lexer.lex (line)) >= 0) {
			if (ret == -2) { // quit
				break;
			}
			cout << "syntax error" << endl;
		}
	}
	free (line_read);
	cout << "quit" << endl;
	return 0;
}
